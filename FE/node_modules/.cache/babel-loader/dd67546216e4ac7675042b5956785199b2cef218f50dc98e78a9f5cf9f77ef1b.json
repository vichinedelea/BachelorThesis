{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ana\\\\Desktop\\\\BachelorThesis\\\\FE\\\\src\\\\EmailContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailContext = /*#__PURE__*/createContext();\nexport const useEmail = () => {\n  _s();\n  const context = useContext(EmailContext);\n  if (!context) {\n    throw new Error('useEmail must be used within an EmailProvider');\n  }\n  return context;\n};\n_s(useEmail, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const EmailProvider = ({\n  children\n}) => {\n  _s2();\n  const [email, setEmail] = useState('');\n  console.log('EmailProvider: email state', email);\n  return /*#__PURE__*/_jsxDEV(EmailContext.Provider, {\n    value: {\n      email,\n      setEmail\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s2(EmailProvider, \"qu4bovk5U4+JuhY7vxbmswqixrc=\");\n_c = EmailProvider;\nvar _c;\n$RefreshReg$(_c, \"EmailProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","EmailContext","useEmail","_s","context","Error","EmailProvider","children","_s2","email","setEmail","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ana/Desktop/BachelorThesis/FE/src/EmailContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst EmailContext = createContext();\r\n\r\nexport const useEmail = () => {\r\n  const context = useContext(EmailContext);\r\n  if (!context) {\r\n    throw new Error('useEmail must be used within an EmailProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const EmailProvider = ({ children }) => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  console.log('EmailProvider: email state', email);\r\n\r\n  return (\r\n    <EmailContext.Provider value={{ email, setEmail }}>\r\n      {children}\r\n    </EmailContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGP,UAAU,CAACI,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtCa,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,KAAK,CAAC;EAEhD,oBACET,OAAA,CAACC,YAAY,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEL,KAAK;MAAEC;IAAS,CAAE;IAAAH,QAAA,EAC/CA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACV,GAAA,CAVWF,aAAa;AAAAa,EAAA,GAAbb,aAAa;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}